apply plugin: 'com.android.application'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.pso.testphone"
        minSdkVersion 18
        targetSdkVersion 29
        versionCode 1
        versionName "1.8"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
    applicationVariants.all { variant ->
        variant.buildConfigField "String", "DEFAULT_UPLOAD_SERVER_ADDRESS" , "\""+getDefUploadServerAddress()+"\""
    }
    applicationVariants.all { variant ->
        variant.buildConfigField "String", "SERVER_LOGIN" , "\""+getUploadServerLogin()+"\""
    }
    applicationVariants.all { variant ->
        variant.buildConfigField "String", "SERVER_PASS" , "\""+getUploadServerPas()+"\""
    }
    applicationVariants.all { variant ->
        variant.buildConfigField "String", "DEF_ADMIN_PASS" , "\""+getAdminPass()+"\""
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'androidx.room:room-runtime:2.2.4'
    annotationProcessor 'androidx.room:room-compiler:2.2.4'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'commons-net:commons-net:3.6'
}

def getDefUploadServerAddress(){
    def Properties props = new Properties()
    props.load(new FileInputStream(new File('secrets.properties')))
    return props['DEFAULT_UPLOAD_SERVER_ADDRESS']
}

def getUploadServerLogin(){
    def Properties props = new Properties()
    props.load(new FileInputStream(new File('secrets.properties')))
    return props['SERVER_LOGIN']
}

def getUploadServerPas(){
    def Properties props = new Properties()
    props.load(new FileInputStream(new File('secrets.properties')))
    return props['SERVER_PASS']
}

def getAdminPass(){
    def Properties props = new Properties()
    props.load(new FileInputStream(new File('secrets.properties')))
    return props['DEF_ADMIN_PASS']
}
